-- local config = {
--     cmd = { '/home/crhf/.local/share/nvim/mason/bin/jdtls' },
--     root_dir = vim.fs.dirname(vim.fs.find({ 'gradlew', '.git', 'mvnw' }, { upward = true })[1]),
-- }
-- -- config['init_options'] = {
-- --     bundles = {
-- --         vim.fn.glob(
-- --             "/home/crhf/installers/java-debug/com.microsoft.java.debug.plugin/target/com.microsoft.java.debug.plugin-*.jar",
-- --             1)
-- --     },
-- -- }
-- config['on_attach'] = function(client, bufnr)
--     -- With `hotcodereplace = 'auto' the debug adapter will try to apply code changes
--     -- you make during a debug session immediately.
--     -- Remove the option if you do not want that.
--     -- You can use the `JdtHotcodeReplace` command to trigger it manually
--     print("jdt registering dap")
--     require('jdtls').setup_dap({ hotcodereplace = 'auto' })
-- end
-- require('jdtls').start_or_attach(config)
--
-- local dap = require('dap')
-- local port = 5005
-- dap.adapters.java = function(callback)
--     -- FIXME:
--     -- Here a function needs to trigger the `vscode.java.startDebugSession` LSP command
--     -- The response to the command must be the `port` used below
--     callback({
--         type = 'server',
--         host = '127.0.0.1',
--         port = port,
--     })
-- end
-- dap.configurations.java = {
--     {
--         type = 'java',
--         request = 'attach',
--         name = "Debug (Attach) - Remote",
--         hostName = "127.0.0.1",
--         port = port,
--     },
-- }
